
#user  nobody;
worker_processes 1;
#env $logspath c:/logs
error_log logs/error.log ;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections 1024;
}


http {
    include mime.types;
    default_type application/octet-stream;

    map $COOKIE_abcdexpid $group {
        default root;
    }
    map $uri $log_filter {
        default 1;
        ~^(.*\.(gif|jpg|jpeg|png|bmp|swf|js|css|svg|woff|ttf|ico)$) 0;

    }
    etag on;

    log_format main0
    '$remote_addr, $connection, $connection_requests, $time_iso8601, $status, $uri, $user, $JSESSIONID, $remote_addr, $host, $scheme, $server_name';
    log_format main1	'$http_uri ,$uri';

    log_format main escape=json

    '"remote_addr": "$remote_addr", "connection": "$connection", "connection_requests": "$connection_requests", "status": "$status", "request": "$request", "http_upgrade":"$http_upgrade","time_local": "$time_local", "scheme": "$scheme", "user":"$user", ”JSESSIONID“:"$JSESSIONID", "request_body": "$request_body", "body_bytes_sent": "$body_bytes_sent", "http_referer": "$http_referer", "http_user_agent": "$http_user_agent", "http_x_forwarded_for": "$http_x_forwarded_for", "http_upgrade": "$http_upgrade", "remote_user": "$remote_user"';


    keepalive_timeout 65;

    gzip on;

    # 监听特定 IP 地址和端口的 server 块
    server {
        listen 8383 ssl;
        server_name qio.wiki;
        ssl_certificate ./conf/cert/qio.wiki_bundle.crt;
        ssl_certificate_key ./conf/cert/qio.wiki.key;

        location / {
            proxy_pass http://127.0.0.1:83;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    server {
        listen 80;
        server_name qio.wiki;
        # server_name qio;
        rewrite ^(.*)$ https://$server_name$1 permanent;
    }

    # 设置上游服务器
    upstream backend {
        server localhost weight=100;
    }


    server {
        # 监听 tcp4 并开启 http2
        listen 443 ssl;
        # http2 on ;
        # 监听 tcp6 并开启 http2
        listen [::]:443 ssl ;
        # http2 on;

        #对应你的域名
        server_name qio.wiki;
        ssl_certificate ./conf/cert/qio.wiki_bundle.crt;
        ssl_certificate_key ./conf/cert/qio.wiki.key;

        ssl_session_timeout 65;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
        ssl_prefer_server_ciphers on;
        #如果是静态文件,直接指向目录,如果是动态应用,用proxy_pass转发一下

        set $user "";
        if ( $http_cookie ~* "qio.csrf-token=.*?\%7C(.+?)(?=;|$)" ) {
            set $user $1;
        }

        set $JSESSIONID "";
        if ($http_cookie ~* "JSESSIONID=(.+?)(?=;|$)" ) {
            set $JSESSIONID $1;
        }

        access_log logs/access0.log
        main0 if=$log_filter
        buffer=256k flush=5s
        ;
        access_log logs/access.log
        main if=$log_filter buffer=256k flush=5s;

        location / {
            proxy_pass http://127.0.0.1:83;
        }

        location ~ ^/(?:j|jc|jcc|manage|file|business|sj|cn|cb|nssw|race|qianxue_(?:gl|manage)) {
            proxy_pass http://127.0.0.1:89;
        }


        location /p/ {
            proxy_pass http://127.0.0.1:831/;
        }


        location /favicon.ico {
            root html;
        }

        location ~ /\w+\.pdf$ {
            root html;
        }

        location /root/ {
            proxy_pass http://127.0.0.1:81/;
        }

        location /a/ {
            proxy_pass http://127.0.0.1:84/;
        }

        location /w/ {
            proxy_pass http://127.0.0.1:83/;
        }


        location /n/ {
            proxy_pass http://127.0.0.1:85/;
        }

        location /_next/ {
            proxy_pass http://127.0.0.1:85/_next/;
        }
        location /api/ {
            proxy_pass http://127.0.0.1:85/api/;
        }
        location /signin/github {
            proxy_pass http://127.0.0.1:85/signin/github;
        }


        location /free/ {
            proxy_pass http://127.0.0.1:86/free/;
        }
        location ~ /free/static {
            root html;
            index index.html index.htm;
            proxy_pass http://127.0.0.1:86;
        }

        # location /ne/ {
        # 	proxy_pass  http://59.173.236.220:8080/;
        # }

        # redirect server error pages to the static page /50x.html
        #
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root html;
        }


    }
}